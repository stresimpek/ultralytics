# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license
# Improved YOLO11 with ASFF, BiFPN, and CBAM for enhanced object detection
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# Note: ASFF, CBAM, and BiFPN modules must be implemented in the Python code
# These modules are referenced in the architecture below

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10
  - [-1, 1, CBAM, []] # 11: Add CBAM after C2PSA to enhance feature sensitivity

# Improved YOLO11n head with BiFPN and ASFF
head:
  # Replace FPN+PAN with BiFPN for bidirectional feature fusion
  - [-1, 1, BiFPN, []] # 12: BiFPN block for P5
  
  # Upsampling path - P5 to P4
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 13
  - [[-1, 6], 1, Concat, [1]] # 14: cat backbone P4
  - [-1, 2, C3k2, [512, False]] # 15
  - [-1, 1, BiFPN, []] # 16: BiFPN block for P4
  - [-1, 1, CBAM, []] # 17: Add CBAM to P4 features
  
  # Upsampling path - P4 to P3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 18
  - [[-1, 4], 1, Concat, [1]] # 19: cat backbone P3
  - [-1, 2, C3k2, [256, False]] # 20: P3/8-small
  - [-1, 1, BiFPN, []] # 21: BiFPN block for P3
  - [-1, 1, CBAM, []] # 22: Add CBAM to P3 features
  
  # Downsampling path - P3 to P4
  - [-1, 1, Conv, [256, 3, 2]] # 23
  - [[-1, 17], 1, Concat, [1]] # 24: cat with P4 features
  - [-1, 2, C3k2, [512, False]] # 25: P4/16-medium
  - [-1, 1, CBAM, []] # 26: Add CBAM to P4 features
  
  # Downsampling path - P4 to P5
  - [-1, 1, Conv, [512, 3, 2]] # 27
  - [[-1, 12], 1, Concat, [1]] # 28: cat with P5 features
  - [-1, 2, C3k2, [1024, True]] # 29: P5/32-large
  - [-1, 1, CBAM, []] # 30: Add CBAM to P5 features
  
  # ASFF for integrating multi-scale features before detection
  - [[22, 26, 30], 1, ASFF, []] # 31: ASFF block for adaptive spatial feature fusion
  
  # Detection head for multi-scale feature detection
  - [-1, 1, Detect, [nc]] # 32: Detect with ASFF-enhanced features
